/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package clinic;

import java.awt.ComponentOrientation;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.awt.event.KeyEvent;
import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.HashMap;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComboBox;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.view.JasperViewer;
import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;

/**
 *
 * @author amnassar
 */

public class Results extends javax.swing.JFrame {
  Connection con ;  
     public  String LL=null;
    PreparedStatement pst ;
    Home h ;
    ResultSet rs;
    String dayyy;
    String p_serial;
    
    public Results(String nameee) {
        initComponents();
        con=DBConnect.connect();
        p_serial=nameee;
        System.out.print(p_serial);
        dates();
        AutoCompleteDecorator.decorate(cmanalyze);
         AutoCompleteDecorator.decorate(cmdate);
        /* cmdate.setComponentOrientation(ComponentOrientation.RIGHT_TO_LEFT);
         cmanalyze.setComponentOrientation(ComponentOrientation.RIGHT_TO_LEFT);*/
         remark.setComponentOrientation(ComponentOrientation.RIGHT_TO_LEFT);
 Calendar cal = new GregorianCalendar();
                int monthh=cal.get(Calendar.MONTH)+1;
                int yearr = cal.get(Calendar.YEAR);
                int dayy =cal.get(Calendar.DAY_OF_MONTH);
             dayyy=String.valueOf(dayy);
 if(dayy == 1 || dayy == 2 || dayy == 3 || dayy == 4
         || dayy == 5 || dayy == 6 || dayy == 7 || dayy == 8 || dayy == 9 )
 {
      dayyy=String.valueOf(dayy);
     dayyy="0"+dayyy;
 }
          TableCellRenderer rendererFromHeader = tdetails1.getTableHeader().getDefaultRenderer();
JLabel headerLabel = (JLabel) rendererFromHeader;
headerLabel.setHorizontalAlignment(JLabel.CENTER);
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment( JLabel.CENTER );
        tdetails1.getColumnModel().getColumn(0).setCellRenderer( centerRenderer );
         tdetails1.getColumnModel().getColumn(1).setCellRenderer( centerRenderer );
         tdetails1.getColumnModel().getColumn(2).setCellRenderer( centerRenderer );
             

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        cancle = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        remark = new javax.swing.JTextArea();
        jLabel23 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        cmdate = new javax.swing.JComboBox();
        jScrollPane5 = new javax.swing.JScrollPane();
        tdetails1 = new javax.swing.JTable();
        save = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        cmanalyze = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        s1 = new javax.swing.JLabel();
        s2 = new javax.swing.JLabel();
        aid = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setMaximumSize(new java.awt.Dimension(530, 550));
        jPanel1.setMinimumSize(new java.awt.Dimension(530, 550));
        jPanel1.setPreferredSize(new java.awt.Dimension(530, 550));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        cancle.setBackground(new java.awt.Color(138, 203, 195));
        cancle.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        cancle.setText("اغلاق");
        cancle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancleActionPerformed(evt);
            }
        });
        jPanel1.add(cancle, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 460, 90, 30));

        remark.setColumns(20);
        remark.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        remark.setRows(5);
        jScrollPane4.setViewportView(remark);

        jPanel1.add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 160, 330, 70));

        jLabel23.setBackground(new java.awt.Color(255, 255, 255));
        jLabel23.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        jLabel23.setText("الملاحظات");
        jPanel1.add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 170, 80, 30));

        jLabel14.setBackground(new java.awt.Color(255, 255, 255));
        jLabel14.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        jLabel14.setText("التاريخ");
        jPanel1.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 40, 80, 30));

        cmdate.setEditable(true);
        cmdate.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        cmdate.setModel(new javax.swing.DefaultComboBoxModel(new String[] { " " }));
        cmdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdateActionPerformed(evt);
            }
        });
        jPanel1.add(cmdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 40, 200, 30));

        tdetails1.setBackground(new java.awt.Color(138, 203, 195));
        tdetails1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        tdetails1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "ID", "اسم التحليل", "ناتج التحليل"
            }
        ));
        tdetails1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        tdetails1.setRowHeight(25);
        tdetails1.setRowMargin(2);
        tdetails1.setSelectionBackground(new java.awt.Color(204, 255, 255));
        tdetails1.setSelectionForeground(new java.awt.Color(0, 0, 0));
        tdetails1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tdetails1MouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(tdetails1);
        if (tdetails1.getColumnModel().getColumnCount() > 0) {
            tdetails1.getColumnModel().getColumn(0).setMinWidth(1);
            tdetails1.getColumnModel().getColumn(0).setPreferredWidth(1);
            tdetails1.getColumnModel().getColumn(0).setMaxWidth(1);
        }

        jPanel1.add(jScrollPane5, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 280, 630, 160));

        save.setBackground(new java.awt.Color(138, 203, 195));
        save.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        save.setText("اضافه");
        save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveActionPerformed(evt);
            }
        });
        jPanel1.add(save, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 170, 90, 60));

        jLabel13.setBackground(new java.awt.Color(255, 255, 255));
        jLabel13.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        jLabel13.setText("اسم التحليل");
        jPanel1.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 100, 90, 30));

        cmanalyze.setEditable(true);
        cmanalyze.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        cmanalyze.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "" }));
        jPanel1.add(cmanalyze, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 100, 200, 30));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/nYwGq3.jpg"))); // NOI18N
        jLabel1.setMaximumSize(new java.awt.Dimension(530, 550));
        jLabel1.setMinimumSize(new java.awt.Dimension(530, 550));
        jLabel1.setPreferredSize(new java.awt.Dimension(530, 550));
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 710, 540));

        s1.setBackground(new java.awt.Color(255, 255, 255));
        s1.setFont(new java.awt.Font("Arial", 1, 30)); // NOI18N
        s1.setForeground(new java.awt.Color(255, 255, 255));
        s1.setText("/");
        jPanel1.add(s1, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 170, 10, -1));

        s2.setBackground(new java.awt.Color(255, 255, 255));
        s2.setFont(new java.awt.Font("Arial", 1, 30)); // NOI18N
        s2.setForeground(new java.awt.Color(255, 255, 255));
        s2.setText("/");
        jPanel1.add(s2, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 170, 10, -1));

        aid.setText("jLabel2");
        jPanel1.add(aid, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 440, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 708, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 535, Short.MAX_VALUE)
        );

        setSize(new java.awt.Dimension(724, 574));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void cancleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancleActionPerformed
       
        this.dispose();
    }//GEN-LAST:event_cancleActionPerformed

    private void saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveActionPerformed

      try {
          if(remark.getText().trim().isEmpty() || cmdate.getSelectedItem().toString().trim().isEmpty() || cmanalyze.getSelectedItem().toString().trim().isEmpty()  )
          {
          }
          else
          {
          String datee=cmdate.getSelectedItem().toString();
          String analyze=cmanalyze.getSelectedItem().toString();
          String remarkk = remark.getText();
          String sql1 = "UPDATE clinic.operation SET remark='"+remark.getText()+"' WHERE  date = '"+datee+"' "
                  + "and name='"+analyze+"' and p_serial = '"+p_serial+"'";
          pst=(PreparedStatement) con.prepareStatement(sql1);
          pst.executeUpdate();
          tablelord1();
          cmanalyze.setSelectedIndex(0);
          remark.setText("");
          }
      } catch (SQLException ex) {
          Logger.getLogger(Results.class.getName()).log(Level.SEVERE, null, ex);
      }
      
    }//GEN-LAST:event_saveActionPerformed

    private void cmdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdateActionPerformed
         Object obj = evt.getSource();
       if(obj==cmdate)
       {
             try {
                  String sqll="SELECT name  FROM clinic.operation where type = 'analyze' ";
                  
                  pst=(PreparedStatement) con.prepareStatement(sqll);
                  
                  rs=pst.executeQuery();
                  
                  while(rs.next()){
                      
                      String name = rs.getString("name");
                      
                      cmanalyze.removeItem(name);
                      
                      
                  }
              } catch (SQLException ex) {
                  Logger.getLogger(attendance.class.getName()).log(Level.SEVERE, null, ex);
              }
              try {
                  String sqll="SELECT name  FROM clinic.operation where type = 'analyze' and p_serial='"+p_serial+"' "
                          + "and date='"+cmdate.getSelectedItem().toString()+"' ORDER BY id DESC";
                  
                  pst=(PreparedStatement) con.prepareStatement(sqll);
                  
                  rs=pst.executeQuery();
                  
                  while(rs.next()){
                      
                      String name = rs.getString("name");
                      
                      cmanalyze.addItem(name);
                      
                      
                  }
              } catch (SQLException ex) {
                  Logger.getLogger(attendance.class.getName()).log(Level.SEVERE, null, ex);
              }
                  
       
       }
    }//GEN-LAST:event_cmdateActionPerformed

    private void tdetails1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tdetails1MouseClicked
        DefaultTableModel tmodel =(DefaultTableModel)tdetails1.getModel();
        int selectrowindex=tdetails1.getSelectedRow();
        aid.setText(tmodel.getValueAt(selectrowindex, 0).toString());
    }//GEN-LAST:event_tdetails1MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LoginForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LoginForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LoginForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LoginForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LoginForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel aid;
    private javax.swing.JButton cancle;
    private javax.swing.JComboBox cmanalyze;
    private javax.swing.JComboBox cmdate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTextArea remark;
    private javax.swing.JLabel s1;
    private javax.swing.JLabel s2;
    private javax.swing.JButton save;
    private javax.swing.JTable tdetails1;
    // End of variables declaration//GEN-END:variables
public void tablelord1()
    {
        try {
            String sqll = "SELECT * FROM clinic.operation where type = 'analyze' AND "
                    + "p_serial='"+p_serial+"' AND date='"+cmdate.getSelectedItem().toString()+"' and remark != 'No Result Entered' order by id";
              pst=(PreparedStatement) con.prepareStatement(sqll);
            rs=pst.executeQuery();
            DefaultTableModel model =(DefaultTableModel)tdetails1.getModel(); 
                model.setRowCount(0);
              int x = 1;
                while (rs.next())
                {
                    Object row[] = {
                       rs.getString("id"),
                       rs.getString("name"),
                       rs.getString("remark"),
                       
                      
                        
                        
                                };
                    model.addRow(row);
                    x++;
                    
                }
                if(x>=11)
                {
                }
                else
                {
                for(int z = x ;z<13;z++)
                {
                 Object rowData[] = {
                       "", "", "","","",
                       };
                model.addRow(rowData);
                }
        }
        }
        catch (SQLException ex) {
            
        }
    }
public void dates()
   {
        try {
             String sql="SELECT distinct date FROM clinic.documents where p_serial = '"+p_serial+"' order by id DESC";
             pst=(PreparedStatement) con.prepareStatement(sql);
             rs=pst.executeQuery();
             while(rs.next()){
                String namee = rs.getString("date");
                
                cmdate.addItem(namee);
  
             }

         } catch (SQLException ex) {
             
         }
   }
}
