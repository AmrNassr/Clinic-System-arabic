/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package clinic;

import java.awt.ComponentOrientation;
import java.awt.HeadlessException;
import java.awt.Image;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;

/**
 *
 * @author amnassar
 */
public final class employee extends javax.swing.JInternalFrame {

    /**
     * Creates new form book
     */
       Connection con ;
    PreparedStatement pst ;
    ResultSet rs;
     public String y ;
     int day;
   int month;
    int year;
    
   
    public employee() {
        initComponents();
        con=DBConnect.connect();
          auto_id();
        tablelord();
        clear();
        types();
          
            TableCellRenderer rendererFromHeader = tdetails.getTableHeader().getDefaultRenderer();
JLabel headerLabel = (JLabel) rendererFromHeader;
headerLabel.setHorizontalAlignment(JLabel.CENTER);
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment( JLabel.CENTER );
        tdetails.getColumnModel().getColumn(0).setCellRenderer( centerRenderer );
         tdetails.getColumnModel().getColumn(1).setCellRenderer( centerRenderer );
         tdetails.getColumnModel().getColumn(2).setCellRenderer( centerRenderer );
         tdetails.getColumnModel().getColumn(3).setCellRenderer( centerRenderer );
         tdetails.getColumnModel().getColumn(4).setCellRenderer( centerRenderer );
         tdetails.getColumnModel().getColumn(5).setCellRenderer( centerRenderer );
          Calendar cal = new GregorianCalendar();
                 day = cal.get(Calendar.DAY_OF_MONTH);
                 month=cal.get(Calendar.MONTH)+1;
                 year = cal.get(Calendar.YEAR);
               date.setText(year+":"+month+":"+day);
       
         name.setComponentOrientation(ComponentOrientation.RIGHT_TO_LEFT);
         phone.setComponentOrientation(ComponentOrientation.RIGHT_TO_LEFT);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel16 = new javax.swing.JLabel();
        jPanel10 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tdetails = new javax.swing.JTable();
        hour = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        autoserial = new javax.swing.JLabel();
        save1 = new javax.swing.JButton();
        delete = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        name = new javax.swing.JTextField();
        cmtype = new javax.swing.JComboBox();
        save = new javax.swing.JButton();
        salary = new javax.swing.JTextField();
        phone = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        serialid = new javax.swing.JLabel();
        date = new javax.swing.JLabel();

        jLabel16.setFont(new java.awt.Font("Sitka Text", 3, 24)); // NOI18N
        jLabel16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/71847608-close-up-of-handshake-on-city-background-with-abstract-sunlight-partnership-concept-double-exposure.jpg"))); // NOI18N

        setMaximumSize(new java.awt.Dimension(980, 690));
        setMinimumSize(new java.awt.Dimension(980, 690));
        setPreferredSize(new java.awt.Dimension(980, 690));

        jPanel10.setBackground(new java.awt.Color(0, 0, 0));
        jPanel10.setForeground(new java.awt.Color(255, 255, 255));
        jPanel10.setMinimumSize(new java.awt.Dimension(90, 34));
        jPanel10.setPreferredSize(new java.awt.Dimension(970, 690));
        jPanel10.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tdetails.setBackground(new java.awt.Color(138, 203, 195));
        tdetails.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        tdetails.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "كود الموظف", "الاسم", "الهاتف", "التخصص", "المرتب", "الساعه"
            }
        ));
        tdetails.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        tdetails.setRowHeight(25);
        tdetails.setRowMargin(2);
        tdetails.setSelectionBackground(new java.awt.Color(204, 255, 255));
        tdetails.setSelectionForeground(new java.awt.Color(0, 0, 0));
        tdetails.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tdetailsMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tdetails);
        if (tdetails.getColumnModel().getColumnCount() > 0) {
            tdetails.getColumnModel().getColumn(0).setMinWidth(100);
            tdetails.getColumnModel().getColumn(0).setPreferredWidth(100);
            tdetails.getColumnModel().getColumn(0).setMaxWidth(100);
        }

        jPanel10.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 250, 920, 280));

        hour.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jPanel10.add(hour, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 190, 70, 30));

        jLabel12.setBackground(new java.awt.Color(255, 255, 255));
        jLabel12.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel12.setText("الساعة");
        jPanel10.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 190, 60, 30));

        autoserial.setFont(new java.awt.Font("Tahoma", 3, 18)); // NOI18N
        autoserial.setForeground(new java.awt.Color(255, 255, 255));
        autoserial.setText("لإثسف");
        jPanel10.add(autoserial, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 20, 170, 60));

        save1.setBackground(new java.awt.Color(138, 203, 195));
        save1.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        save1.setText("تفريغ");
        save1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                save1ActionPerformed(evt);
            }
        });
        jPanel10.add(save1, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 140, 180, 40));

        delete.setBackground(new java.awt.Color(138, 203, 195));
        delete.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        delete.setText("مسح");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });
        jPanel10.add(delete, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 550, 180, 50));

        jLabel11.setBackground(new java.awt.Color(255, 255, 255));
        jLabel11.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel11.setText("المرتب");
        jPanel10.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 190, 90, 30));

        jLabel13.setBackground(new java.awt.Color(255, 255, 255));
        jLabel13.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel13.setText("اسم الموظف");
        jPanel10.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 40, 110, 30));

        name.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jPanel10.add(name, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 40, 230, 30));

        cmtype.setModel(new javax.swing.DefaultComboBoxModel(new String[] { " " }));
        jPanel10.add(cmtype, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 90, 230, 30));

        save.setBackground(new java.awt.Color(138, 203, 195));
        save.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        save.setText("حفظ");
        save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveActionPerformed(evt);
            }
        });
        jPanel10.add(save, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 80, 180, 40));

        salary.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jPanel10.add(salary, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 190, 70, 30));

        phone.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jPanel10.add(phone, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 140, 230, 30));

        jLabel8.setBackground(new java.awt.Color(255, 255, 255));
        jLabel8.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel8.setText("التخصص");
        jPanel10.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 90, 90, 30));

        jLabel9.setBackground(new java.awt.Color(255, 255, 255));
        jLabel9.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel9.setText("رقم الهاتف");
        jPanel10.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 140, 90, 30));

        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/nYwGq3.jpg"))); // NOI18N
        jLabel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 0, 0), 2));
        jPanel10.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 970, 720));

        serialid.setText("jLabel1");
        jPanel10.add(serialid, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 650, -1, -1));

        date.setText("jLabel1");
        jPanel10.add(date, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 170, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, 964, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveActionPerformed
try
{
    if(serialid.getText().trim().isEmpty())
        {

            String namee = name.getText();
            String typee = cmtype.getSelectedItem().toString();
            String phonee = phone.getText();
             int salaryy= Integer.parseInt(salary.getText());
             int hourr= Integer.parseInt(hour.getText());
            String seriall =autoserial.getText();
          
            

            if( name.getText().trim().isEmpty() ||salary.getText().trim().isEmpty() ||phone.getText().trim().isEmpty() ||  cmtype.getSelectedItem().toString().trim().isEmpty())
            {
                JOptionPane.showMessageDialog(this, " من فضلك ادخل اسم وهاتف الموظف و المرتب الشهري");
            }
            else
            {
                int dialogButton = JOptionPane.YES_NO_OPTION;
                int dialogResult = JOptionPane.showConfirmDialog(this, "هل تريد حفظ العملية", "رسالة تاكيد ؟ ", dialogButton);
                if(dialogResult == 0) {
                    try{
                        String sql = "INSERT INTO clinic.employee (hour,name,phone,type, salary,serial) VALUES"
                        + " ('"+hourr+"','"+namee+"','"+phonee+"','"+typee+"','"+salaryy+"','"+seriall+"')";
                        pst = (PreparedStatement)con.prepareStatement(sql);
                        pst.execute();
                          String sqll = "INSERT INTO clinic.advanceamount (name,date,serial, amount,remaining) VALUES"
                        + " ('"+namee+"','"+date.getText()+"','"+seriall+"','"+salaryy+"','"+salaryy+"')";
                        pst = (PreparedStatement)con.prepareStatement(sqll);
                        pst.execute();
                        JOptionPane.showMessageDialog(null, "تم اضافة الموظف");

                        clear();
                        tablelord();
                        auto_id();

                    }
                    catch(Exception e ){
                        JOptionPane.showMessageDialog(null,e);
                    }

                }
                else
                {JOptionPane.showMessageDialog(this, "الغاء");

                }
            }
        }
        else
        {
            String namee = name.getText();  
            String typee = cmtype.getSelectedItem().toString();
            String phonee = phone.getText();
            String salaryy = salary.getText();
            String serial = autoserial.getText();
            int dialogButton = JOptionPane.YES_NO_OPTION;
                int dialogResult = JOptionPane.showConfirmDialog(this, "هل تريد حفظ العملية", "رسالة تاكيد ؟ ", dialogButton);
                if(dialogResult == 0) {
                 try {

                    String sql = "UPDATE clinic.employee SET hour='"+hour.getText()+"',type='"+typee+"',salary='"+salaryy+"', name='"+namee+"',  phone='"+phonee+"'  WHERE serial='"+serialid.getText()+"'";
                    pst=(PreparedStatement) con.prepareStatement(sql);
                    pst.executeUpdate();
                     String sql1 = "UPDATE clinic.empployeeattendance SET hourr='"+hour.getText()+"'"
                             + "WHERE serial='"+serialid.getText()+"'";
                    pst=(PreparedStatement) con.prepareStatement(sql1);
                    pst.executeUpdate();
                    JOptionPane.showMessageDialog(rootPane, "تم تعديل الموظف بنجاح");
                    clear();
                    tablelord();

                } catch (SQLException ex) {
JOptionPane.showMessageDialog(this, ex);
                }
            }
            else
            {JOptionPane.showMessageDialog(this, "الغاء");
               

            }
        }
}
catch(Exception e )
        {
            JOptionPane.showMessageDialog(this, " الرقم الذي ادخلته غير صحيح");
        }
        
    }//GEN-LAST:event_saveActionPerformed

    private void tdetailsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tdetailsMouseClicked
        DefaultTableModel tmodel =(DefaultTableModel)tdetails.getModel();
        //bid,name, price, publisher, book_type, b_code, date, category
        int selectrowindex=tdetails.getSelectedRow();
       serialid.setText(tmodel.getValueAt(selectrowindex, 0).toString());
        name.setText(tmodel.getValueAt(selectrowindex, 1).toString());
        cmtype.setSelectedItem(tmodel.getValueAt(selectrowindex, 3).toString());
         phone.setText(tmodel.getValueAt(selectrowindex, 2).toString());
        salary.setText(tmodel.getValueAt(selectrowindex, 4).toString());
        hour.setText(tmodel.getValueAt(selectrowindex, 5).toString());
       
    
  
    }//GEN-LAST:event_tdetailsMouseClicked

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        if(serialid.getText().trim().isEmpty())
        {
            JOptionPane.showMessageDialog(rootPane, "من فضلك اختر الموظف اولا");

        }
        else{
            int dialogButton = JOptionPane.YES_NO_OPTION;
            int dialogResult = JOptionPane.showConfirmDialog(this, "هل تريد حفظ العملية", "رسالة تاكيد ؟ ", dialogButton);
            if(dialogResult == 0) {
                try {
                    String sql = "DELETE FROM clinic.employee WHERE serial='"+serialid.getText()+"'";
                    pst=(PreparedStatement) con.prepareStatement(sql);
                    pst.execute();
                    String sqlz = "DELETE FROM clinic.advanceamount WHERE serial='"+serialid.getText()+"'";
                    pst=(PreparedStatement) con.prepareStatement(sqlz);
                    pst.execute();
                    JOptionPane.showMessageDialog(rootPane, "تم ازالة العميل بنجاح");
                    tablelord();
                    clear();
                } catch (SQLException ex) {

                }
                clear();
            }
            else
            {

                JOptionPane.showMessageDialog(this, " الغاء");
            }
        }
    }//GEN-LAST:event_deleteActionPerformed

    private void save1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_save1ActionPerformed
        clear();
    }//GEN-LAST:event_save1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel autoserial;
    private javax.swing.JComboBox cmtype;
    private javax.swing.JLabel date;
    private javax.swing.JButton delete;
    private javax.swing.JTextField hour;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField name;
    private javax.swing.JTextField phone;
    private javax.swing.JTextField salary;
    private javax.swing.JButton save;
    private javax.swing.JButton save1;
    private javax.swing.JLabel serialid;
    private javax.swing.JTable tdetails;
    // End of variables declaration//GEN-END:variables

   public void tablelord()
    {
        try {
            String sqll = "SELECT serial,name,type,phone,salary,hour FROM clinic.employee";
              pst=(PreparedStatement) con.prepareStatement(sqll);
            rs=pst.executeQuery();
            DefaultTableModel model =(DefaultTableModel)tdetails.getModel(); 
                model.setRowCount(0);
              int x = 1;
                while (rs.next())
                {
                    Object row[] = {
                       rs.getString("serial"),
                       rs.getString("name"),
                       rs.getString("phone"),
                       rs.getString("type"),
                       rs.getString("salary"),
                       rs.getString("hour")
                       
                      
                        
                        
                                };
                    model.addRow(row);
                    x++;
                    
                }
                if(x>=11)
                {
                }
                else
                {
                for(int z = x ;z<13;z++)
                {
                 Object rowData[] = {
                       "", "", "","","",
                       };
                model.addRow(rowData);
                }
        }
        }
        catch (SQLException ex) {
            
        }
    }
     public void clear()
 {
 name.setText("");  
 salary.setText("");
 phone.setText("");
 cmtype.setSelectedIndex(0);
 serialid.setText("");

 
 }
       public void auto_id(){

         try {
             String sql = "SELECT serial FROM clinic.employee ORDER BY serial DESC LIMIT 1";
             pst=(PreparedStatement) con.prepareStatement(sql);
             rs=pst.executeQuery();
             if(rs.next()){
                 String rnno=rs.getString("serial");
                 int co=rnno.length();
                 String txt=rnno.substring(0,2);
                 String num = rnno.substring(2,co);
                 int n = Integer.parseInt(num);
                 n++;
                 String snum=Integer.toString(n);
                 String ftxt=txt+snum;
                 autoserial.setText(ftxt);
             }
             else
             {
                 autoserial.setText("EM1001");
             }
         } catch (SQLException ex) {
            
         }
    
}
       public void types()
   {
        try {
             String sql="SELECT name  FROM clinic.employeetypes order by name ";
             pst=(PreparedStatement) con.prepareStatement(sql);
             rs=pst.executeQuery();
             while(rs.next()){
                String name = rs.getString("name");
                
                cmtype.addItem(name);
  
             }

         } catch (SQLException ex) {
             
         }
   }
 
    
     
}
