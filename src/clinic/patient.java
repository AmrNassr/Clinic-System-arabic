/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package clinic;
import java.awt.ComponentOrientation;
import java.awt.HeadlessException;
import java.awt.Image;
import java.awt.event.KeyEvent;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.ParseException;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.view.JasperViewer;
import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;
import java.util.HashMap;
import java.util.Locale;
import java.util.Map;
import java.util.TimeZone;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JTextField;

/**
 *
 * @author amnassar
 */
public final class patient extends javax.swing.JInternalFrame {

    /**
     * Creates new form book
     */
     Connection con ;
     PreparedStatement pst ;
     ResultSet rs;
     public String y ;
     public String datee;
     public  Calendar cal;
     String dayyy ;
     String smokerr ; 
     String sugarr ; 
     String pressurr;
    
   
    public patient(String x )throws IOException, ParseException {
        initComponents();
        con=DBConnect.connect();
        doctors();
        clear();
         tablelord();
         System.out.print(serialll.getText());
         privateauto_id();
         TableCellRenderer rendererFromHeader = tdetails.getTableHeader().getDefaultRenderer();
JLabel headerLabel = (JLabel) rendererFromHeader;
headerLabel.setHorizontalAlignment(JLabel.CENTER);
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment( JLabel.CENTER );
        tdetails.getColumnModel().getColumn(0).setCellRenderer( centerRenderer );
         tdetails.getColumnModel().getColumn(1).setCellRenderer( centerRenderer );
         tdetails.getColumnModel().getColumn(2).setCellRenderer( centerRenderer );
         tdetails.getColumnModel().getColumn(3).setCellRenderer( centerRenderer ); 
         tdetails.getColumnModel().getColumn(4).setCellRenderer( centerRenderer );
         tdetails.getColumnModel().getColumn(5).setCellRenderer( centerRenderer ); 
          tdetails.getColumnModel().getColumn(6).setCellRenderer( centerRenderer );
         tdetails.getColumnModel().getColumn(7).setCellRenderer( centerRenderer );
         tdetails.getColumnModel().getColumn(8).setCellRenderer( centerRenderer );
          cal = new GregorianCalendar();
             
                int month=cal.get(Calendar.MONTH)+1;
             int year = cal.get(Calendar.YEAR);
                 int dayy =cal.get(Calendar.DAY_OF_MONTH);
             dayyy=String.valueOf(dayy);
 if(dayy == 1 || dayy == 2 || dayy == 3 || dayy == 4
         || dayy == 5 || dayy == 6 || dayy == 7 || dayy == 8 || dayy == 9 )
 {
      dayyy=String.valueOf(dayy);
     dayyy="0"+dayyy;
 }
           date1.setText(year+"-"+month+"-"+dayyy);
           datee=date1.getText().toString();
   if(x.equals("admin"))
        {
            save2.setEnabled(true);
          
        }
      }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel16 = new javax.swing.JLabel();
        jPanel10 = new javax.swing.JPanel();
        cmdoctor = new javax.swing.JComboBox();
        jLabel8 = new javax.swing.JLabel();
        phone = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tdetails = new javax.swing.JTable();
        serialll = new javax.swing.JLabel();
        dateofbirth = new com.toedter.calendar.JDateChooser();
        pressure = new javax.swing.JCheckBox();
        smoker = new javax.swing.JCheckBox();
        sugar = new javax.swing.JCheckBox();
        jLabel13 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        address = new javax.swing.JTextArea();
        weight = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        save4 = new javax.swing.JButton();
        save5 = new javax.swing.JButton();
        jLabel18 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        name = new javax.swing.JTextField();
        save2 = new javax.swing.JButton();
        save1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        serialid = new javax.swing.JLabel();
        date1 = new javax.swing.JLabel();

        jLabel16.setFont(new java.awt.Font("Sitka Text", 3, 24)); // NOI18N
        jLabel16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/71847608-close-up-of-handshake-on-city-background-with-abstract-sunlight-partnership-concept-double-exposure.jpg"))); // NOI18N

        setMaximumSize(new java.awt.Dimension(980, 690));
        setMinimumSize(new java.awt.Dimension(980, 690));
        setPreferredSize(new java.awt.Dimension(980, 690));

        jPanel10.setBackground(new java.awt.Color(0, 0, 0));
        jPanel10.setForeground(new java.awt.Color(255, 255, 255));
        jPanel10.setMinimumSize(new java.awt.Dimension(90, 34));
        jPanel10.setPreferredSize(new java.awt.Dimension(970, 690));
        jPanel10.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        cmdoctor.setEditable(true);
        cmdoctor.setModel(new javax.swing.DefaultComboBoxModel(new String[] { " " }));
        cmdoctor.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                cmdoctorMouseEntered(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                cmdoctorMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                cmdoctorMouseReleased(evt);
            }
        });
        jPanel10.add(cmdoctor, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 120, 230, 30));

        jLabel8.setBackground(new java.awt.Color(255, 255, 255));
        jLabel8.setFont(new java.awt.Font("Arial", 1, 22)); // NOI18N
        jLabel8.setText("الطبيب المعالج");
        jPanel10.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 120, 130, -1));

        phone.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jPanel10.add(phone, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 20, 230, 30));

        tdetails.setBackground(new java.awt.Color(138, 203, 195));
        tdetails.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        tdetails.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "الكود", "اسم المريض", "رقم الهاتف", "تاريخ الميلاد", "مدخن ؟", "سكري ؟", "ضغط ؟", "id", "address", "Weight", "doctor"
            }
        ));
        tdetails.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        tdetails.setRowHeight(25);
        tdetails.setRowMargin(2);
        tdetails.setSelectionBackground(new java.awt.Color(204, 255, 255));
        tdetails.setSelectionForeground(new java.awt.Color(0, 0, 0));
        tdetails.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tdetailsMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tdetails);
        if (tdetails.getColumnModel().getColumnCount() > 0) {
            tdetails.getColumnModel().getColumn(0).setMinWidth(100);
            tdetails.getColumnModel().getColumn(0).setPreferredWidth(100);
            tdetails.getColumnModel().getColumn(0).setMaxWidth(100);
            tdetails.getColumnModel().getColumn(2).setMinWidth(150);
            tdetails.getColumnModel().getColumn(2).setPreferredWidth(150);
            tdetails.getColumnModel().getColumn(2).setMaxWidth(150);
            tdetails.getColumnModel().getColumn(4).setMinWidth(50);
            tdetails.getColumnModel().getColumn(4).setPreferredWidth(50);
            tdetails.getColumnModel().getColumn(4).setMaxWidth(50);
            tdetails.getColumnModel().getColumn(5).setMinWidth(50);
            tdetails.getColumnModel().getColumn(5).setPreferredWidth(50);
            tdetails.getColumnModel().getColumn(5).setMaxWidth(50);
            tdetails.getColumnModel().getColumn(6).setMinWidth(100);
            tdetails.getColumnModel().getColumn(6).setPreferredWidth(100);
            tdetails.getColumnModel().getColumn(6).setMaxWidth(100);
            tdetails.getColumnModel().getColumn(7).setMinWidth(1);
            tdetails.getColumnModel().getColumn(7).setPreferredWidth(1);
            tdetails.getColumnModel().getColumn(7).setMaxWidth(1);
            tdetails.getColumnModel().getColumn(8).setMinWidth(1);
            tdetails.getColumnModel().getColumn(8).setPreferredWidth(1);
            tdetails.getColumnModel().getColumn(8).setMaxWidth(1);
            tdetails.getColumnModel().getColumn(9).setMinWidth(1);
            tdetails.getColumnModel().getColumn(9).setPreferredWidth(1);
            tdetails.getColumnModel().getColumn(9).setMaxWidth(1);
            tdetails.getColumnModel().getColumn(10).setMinWidth(1);
            tdetails.getColumnModel().getColumn(10).setPreferredWidth(1);
            tdetails.getColumnModel().getColumn(10).setMaxWidth(1);
        }

        jPanel10.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 240, 930, 270));

        serialll.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        serialll.setText("Test");
        jPanel10.add(serialll, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 120, 30));

        dateofbirth.setDateFormatString("yyyy-MM-dd");
        dateofbirth.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jPanel10.add(dateofbirth, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 70, 220, 30));

        pressure.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        pressure.setText("ضغط ؟");
        pressure.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pressureActionPerformed(evt);
            }
        });
        jPanel10.add(pressure, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 70, -1, 30));

        smoker.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        smoker.setText("مدخن ؟");
        jPanel10.add(smoker, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 70, -1, 30));

        sugar.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        sugar.setText("سكري ؟");
        jPanel10.add(sugar, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 70, -1, 30));

        jLabel13.setBackground(new java.awt.Color(255, 255, 255));
        jLabel13.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel13.setText("تاريخ الميلاد");
        jPanel10.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 70, 110, -1));

        jLabel19.setBackground(new java.awt.Color(255, 255, 255));
        jLabel19.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel19.setText("العنوان");
        jPanel10.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(860, 130, 90, -1));

        address.setColumns(20);
        address.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        address.setRows(5);
        jScrollPane2.setViewportView(address);

        jPanel10.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 120, 230, 70));

        weight.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jPanel10.add(weight, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 70, 70, 30));

        jLabel17.setBackground(new java.awt.Color(255, 255, 255));
        jLabel17.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel17.setText("الوزن");
        jPanel10.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 70, 80, -1));

        save4.setBackground(new java.awt.Color(138, 203, 195));
        save4.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        save4.setText("تفريغ");
        save4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                save4ActionPerformed(evt);
            }
        });
        jPanel10.add(save4, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 180, 110, 40));

        save5.setBackground(new java.awt.Color(138, 203, 195));
        save5.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        save5.setText("بحث");
        save5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                save5ActionPerformed(evt);
            }
        });
        jPanel10.add(save5, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 180, 110, 40));

        jLabel18.setBackground(new java.awt.Color(255, 255, 255));
        jLabel18.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel18.setText("رقم الهاتف");
        jPanel10.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 20, 90, -1));

        jLabel15.setBackground(new java.awt.Color(255, 255, 255));
        jLabel15.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel15.setText("اسم المريض");
        jPanel10.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 20, 120, -1));

        name.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jPanel10.add(name, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 20, 220, 30));

        save2.setBackground(new java.awt.Color(138, 203, 195));
        save2.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        save2.setText("مسح");
        save2.setEnabled(false);
        save2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                save2ActionPerformed(evt);
            }
        });
        jPanel10.add(save2, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 530, 180, 40));

        save1.setBackground(new java.awt.Color(138, 203, 195));
        save1.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        save1.setText("حفظ");
        save1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                save1ActionPerformed(evt);
            }
        });
        jPanel10.add(save1, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 180, 110, 40));

        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/nYwGq3.jpg"))); // NOI18N
        jLabel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 0, 0), 2));
        jPanel10.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 970, 720));

        serialid.setText("jLabel1");
        jPanel10.add(serialid, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 650, -1, -1));

        date1.setText("jLabel1");
        jPanel10.add(date1, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 80, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, 964, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, 637, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void save1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_save1ActionPerformed
        if(!name.getText().trim().isEmpty() || !phone.getText().trim().isEmpty())
                 { 
        TimeZone tz = TimeZone.getTimeZone("GMT+02");
             Calendar c = Calendar.getInstance(tz);
             String time = String.format("%02d" , c.get(Calendar.HOUR_OF_DAY))+":"+
                     String.format("%02d" , c.get(Calendar.MINUTE));
             String fulldatee=datee+" "+time;
             String namee = name.getText();
             String phonee = phone.getText();
             String serial = serialll.getText();
             String addresss = address.getText();
             String weightt=weight.getText();
             String doctorr=cmdoctor.getSelectedItem().toString();
             String dateofbirthh=((JTextField)dateofbirth.getDateEditor().getUiComponent()).getText();
             if(sugar.isSelected())
                {
                    sugarr="Yes";
                }
                else
                {
                    sugarr="No";
                }
              if(pressure.isSelected())
                {
                    pressurr="Yes";
                }
                else
                {
                    pressurr="No";
                }
               if(smoker.isSelected())
                {
                    smokerr="Yes";
                }
                else
                {
                    smokerr="No";
                }
             if(serialid.getText().trim().isEmpty())
             {
                 if(!name.getText().trim().isEmpty() || !phone.getText().trim().isEmpty())
                 {
                 try {
                     
            String sqll3 = "INSERT INTO clinic.patient (doctor,name,phone,date,dob,address,serial,sugar,pressure,smoker,weight) VALUES"
                     + " ('"+doctorr+"','"+namee+"','"+phonee+"','"+fulldatee+"',"
                    + "'"+dateofbirthh+"','"+addresss+"','"+serial+"','"+sugarr+"','"+pressurr+"','"+smokerr+"','"+weightt+"')";
             pst = (PreparedStatement)con.prepareStatement(sqll3);
             pst.execute();
             JOptionPane.showMessageDialog(this, "تم اضافة المريض بنجاح");
             tablelord();
             clear();
             privateauto_id();
         } catch (SQLException ex) {
             JOptionPane.showMessageDialog(this, " المريض قد يكون موجود و يجب اضافة تاريخ صحيح ");
         }}
                 else
                 {
                     JOptionPane.showMessageDialog(this, "من فضلك ادخل الاسم ورقم الهاتف ع الاقل");
                 }
             }
             else
             {
              try {
                  String sqla = "UPDATE clinic.patient SET doctor='"+doctorr+"',name='"+namee+"',phone='"+phonee+"',address='"+addresss+"'"
                          + ",dob='"+dateofbirthh+"',weight='"+weightt+"',sugar='"+sugarr+"'"
                          + ",smoker='"+smokerr+"',pressure='"+pressurr+"'"
                          + " where  serial='"+serialll.getText()+"'";
                  pst=(PreparedStatement) con.prepareStatement(sqla);
                  pst.executeUpdate();
                  JOptionPane.showMessageDialog(this, "تم تعديل صفحة العميل بنجاح");
                   clear();
                   tablelord();
                   privateauto_id();
              } catch (SQLException ex) {
                  Logger.getLogger(patient.class.getName()).log(Level.SEVERE, null, ex);
              }
             }
                 }
        else
        {
            JOptionPane.showMessageDialog(this, "من فضلك ادخل الاسم و رقم الهاتف");
        }
        

     
    }//GEN-LAST:event_save1ActionPerformed

    private void save2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_save2ActionPerformed
        int dialogButton = JOptionPane.YES_NO_OPTION;
                int dialogResult = JOptionPane.showConfirmDialog(this, "هل تريد حفظ العملية", "رسالة تاكيد ؟ ", dialogButton);
                if(dialogResult == 0) {              
        try {
                String sql = " DELETE FROM clinic.patient WHERE serial='"+serialll.getText()+"' ";
                pst=(PreparedStatement) con.prepareStatement(sql);
                pst.execute();
                JOptionPane.showMessageDialog(this, "تم مسح العميل بنجاح");
                tablelord();
                 clear();
                 privateauto_id();
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this, "المريض لدية معلومات و روشتات لا يمكن مسحة ");
            }
                }
                else
                {
                    JOptionPane.showMessageDialog(null,"الغاء");
                }
    }//GEN-LAST:event_save2ActionPerformed

    private void tdetailsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tdetailsMouseClicked
        DefaultTableModel tmodel =(DefaultTableModel)tdetails.getModel();
        //bid,name, price, publisher, book_type, b_code, date, category
        int selectrowindex=tdetails.getSelectedRow();
        name.setText(tmodel.getValueAt(selectrowindex, 1).toString());
        serialll.setText(tmodel.getValueAt(selectrowindex, 0).toString());
         phone.setText(tmodel.getValueAt(selectrowindex, 2).toString());
        serialid.setText(tmodel.getValueAt(selectrowindex, 7).toString());
        address.setText(tmodel.getValueAt(selectrowindex, 8).toString());
        weight.setText(tmodel.getValueAt(selectrowindex, 9).toString());
        cmdoctor.setSelectedItem(tmodel.getValueAt(selectrowindex, 10).toString());
        ((JTextField)dateofbirth.getDateEditor().getUiComponent()).setText(tmodel.getValueAt(selectrowindex, 3).toString());
        String xsmoker = tmodel.getValueAt(selectrowindex, 4).toString();
        String xsugar = tmodel.getValueAt(selectrowindex, 5).toString();
        String xpressure = tmodel.getValueAt(selectrowindex, 6).toString();
        if(xsmoker.equals("Yes"))
                {
                    smoker.setSelected(true);
                }
                else
                {
                    smoker.setSelected(false);
                }
        if(xpressure.equals("Yes"))
                {
                    pressure.setSelected(true);
                }
                else
                {
                    pressure.setSelected(false);
                }
        if(xsugar.equals("Yes"))
                {
                    sugar.setSelected(true);
                }
                else
                {
                    sugar.setSelected(false);
                }
       

    }//GEN-LAST:event_tdetailsMouseClicked

    private void pressureActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pressureActionPerformed
        
    }//GEN-LAST:event_pressureActionPerformed

    private void cmdoctorMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cmdoctorMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_cmdoctorMouseEntered

    private void cmdoctorMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cmdoctorMousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmdoctorMousePressed

    private void cmdoctorMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cmdoctorMouseReleased

    }//GEN-LAST:event_cmdoctorMouseReleased

    private void save4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_save4ActionPerformed
        clear();
        tablelord();
        privateauto_id();
    }//GEN-LAST:event_save4ActionPerformed

    private void save5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_save5ActionPerformed
         try {
             String namee = name.getText();
             String phonee = phone.getText();
             String serial = serialll.getText();
             String addresss = address.getText();
             String weightt=weight.getText();
             String doctorr=cmdoctor.getSelectedItem().toString();
             String dateofbirthh=((JTextField)dateofbirth.getDateEditor().getUiComponent()).getText();
             if(sugar.isSelected())
             {
                 sugarr="Yes";
             }
             else
             {
                 sugarr="No";
             }
             if(pressure.isSelected())
             {
                 pressurr="Yes";
             }
             else
             {
                 pressurr="No";
             }
             if(smoker.isSelected())
             {
                 smokerr="Yes";
             }
             else
             {
                 smokerr="No";
             }
             String sqll = "SELECT * FROM clinic.patient WHERE  1=1 ";
             if(!name.getText().trim().isEmpty())
             {
                 sqll=sqll+" AND name LIKE '%"+namee+"%'";
             }
             else if (!phone.getText().trim().isEmpty())
             {
                 sqll=sqll+" AND phone LIKE '%"+phonee+"%'";
             }
             else if (!dateofbirthh.trim().isEmpty())
             {
                 sqll=sqll+" AND dob LIKE '%"+dateofbirthh+"%'";
             }
             else if (!address.getText().trim().isEmpty())
             {
                 sqll=sqll+" AND address LIKE '%"+addresss+"%'";
             }
             else if (!weight.getText().trim().isEmpty())
             {
                 sqll=sqll+" AND weight LIKE '%"+weightt+"%'";
             }
             else if (!cmdoctor.getSelectedItem().toString().trim().isEmpty())
             {
                 sqll=sqll+" AND doctor LIKE '%"+cmdoctor.getSelectedItem().toString()+"%'";
             }
             pst=(PreparedStatement) con.prepareStatement(sqll);
             rs=pst.executeQuery();
             DefaultTableModel model =(DefaultTableModel)tdetails.getModel();
             model.setRowCount(0);
             int k = 0;
             while (rs.next())
             {
                 Object row[] = {
                     rs.getString("serial"),
                     rs.getString("name"),
                     rs.getString("phone"),
                     rs.getString("dob"),
                     rs.getString("smoker"),
                     rs.getString("sugar"),
                     rs.getString("pressure"),
                     rs.getString("id"),
                     rs.getString("address"),
                     rs.getString("weight"),
                     rs.getString("doctor"),
                     
                     
                     
                     
                 };
                 model.addRow(row);
                 k++;
             }
             for(int i = k ;i<11;i++)
             {
                 Object rowData[] = {
                     "",
                     "",
                     "",
                     "",
                     "",
                     "",
                     "",
                     "",
                     "",
                     "",
                     "",
                     "",
                 };
                 model.addRow(rowData); 
             }
         } catch (SQLException ex) {
             Logger.getLogger(patient.class.getName()).log(Level.SEVERE, null, ex);
         }
          
    }//GEN-LAST:event_save5ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea address;
    private javax.swing.JComboBox cmdoctor;
    private javax.swing.JLabel date1;
    private com.toedter.calendar.JDateChooser dateofbirth;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField name;
    private javax.swing.JTextField phone;
    private javax.swing.JCheckBox pressure;
    private javax.swing.JButton save1;
    private javax.swing.JButton save2;
    private javax.swing.JButton save4;
    private javax.swing.JButton save5;
    private javax.swing.JLabel serialid;
    private javax.swing.JLabel serialll;
    private javax.swing.JCheckBox smoker;
    private javax.swing.JCheckBox sugar;
    private javax.swing.JTable tdetails;
    private javax.swing.JTextField weight;
    // End of variables declaration//GEN-END:variables
public void clear()
{
    name.setText(""); 
    serialid.setText(""); 
    phone.setText(""); 
    serialll.setText("");
    address.setText("");
    weight.setText("");
    smoker.setSelected(false);
    pressure.setSelected(false);
    sugar.setSelected(false);
    cmdoctor.setSelectedIndex(0);
    ((JTextField)dateofbirth.getDateEditor().getUiComponent()).setText("");

}
public void tablelord()
{
    try {
           String sqll = "SELECT * FROM clinic.patient";
              pst=(PreparedStatement) con.prepareStatement(sqll);
            rs=pst.executeQuery();
            DefaultTableModel model =(DefaultTableModel)tdetails.getModel(); 
                model.setRowCount(0);
              int k = 0;
                while (rs.next())
                {
                    Object row[] = {
                        rs.getString("serial"),
                        rs.getString("name"),
                        rs.getString("phone"),
                        rs.getString("dob"),
                        rs.getString("smoker"),
                        rs.getString("sugar"),
                        rs.getString("pressure"),
                        rs.getString("id"),
                        rs.getString("address"),
                        rs.getString("weight"),
                        rs.getString("doctor"),
                    
                    
                   
                 
                                };
                    model.addRow(row);
                    k++;
                }
                for(int i = k ;i<11;i++)
                {
                 Object rowData[] = {
                       "",
                     "",
                     "",
                     "",
                     "",
                     "",
                     "",
                     "",
                     "",
                     "",
                     "",
                     "",
                       };
                model.addRow(rowData);
                } 
        }
        catch (SQLException ex) {
            
        }
}
     
  public void privateauto_id(){

         try {
             String sql = "SELECT serial FROM clinic.patient ORDER BY id DESC LIMIT 1";
             pst=(PreparedStatement) con.prepareStatement(sql);
             rs=pst.executeQuery();
             if(rs.next()){
                 String rnno=rs.getString("serial");
                 int co=rnno.length();
                 String txt=rnno.substring(0,3);
                 String num = rnno.substring(3,co);
                 int n = Integer.parseInt(num);
                 n++;
                 String snum=Integer.toString(n);
                 String ftxt=txt+snum;
                 serialll.setText("");
                 serialll.setText(ftxt);
             }
             else
             {
                 serialll.setText("PN-1001");
             }
         } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex);
         }
    
}
   public void doctors()
   {
        try {
             String sql="SELECT name  FROM clinic.doctors order by id";
             pst=(PreparedStatement) con.prepareStatement(sql);
             rs=pst.executeQuery();
             while(rs.next()){
                String namee = rs.getString("name");
                
                cmdoctor.addItem(namee);
  
             }

         } catch (SQLException ex) {
              
         }
   }

}
